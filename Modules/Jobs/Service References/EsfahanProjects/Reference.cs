//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RaaiVan.Modules.Jobs.EsfahanProjects {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EsfahanProjects.ahdaUtility15Soap")]
    public interface ahdaUtility15Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAppID(string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAppID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAppIDAsync(string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSiteListCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSiteListCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSiteListCount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSiteListCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentUser2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCurrentUser2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentUser2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentUser2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnCodeURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EnCodeURL(string strURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EnCodeURL", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EnCodeURLAsync(string strURL);
        
        // CODEGEN: Generating message contract since the wrapper name (EncodeURL) of message EncodeURLRequest does not match the default value (EncodeURL1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EncodeURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse EncodeURL1(RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EncodeURL", ReplyAction="*")]
        System.Threading.Tasks.Task<RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse> EncodeURL1Async(RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItems(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string UserName, string Password, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItemsAsync(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string UserName, string Password, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateListItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateListItems(string SiteURL, string listName, string updates, string UserName, string Password, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateListItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateListItemsAsync(string SiteURL, string listName, string updates, string UserName, string Password, string Domain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateInfoPathDoc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateInfoPathDoc(string sFilename, string sContentType, string sList, string sURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateInfoPathDoc", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateInfoPathDocAsync(string sFilename, string sContentType, string sList, string sURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDocument(string sFilename, string sContentType, string sList, string sURL, string sUserName, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateDocumentAsync(string sFilename, string sContentType, string sList, string sURL, string sUserName, string sPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentIDfromURL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long GetDocumentIDfromURL(string strWebURL, string strFileURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocumentIDfromURL", ReplyAction="*")]
        System.Threading.Tasks.Task<long> GetDocumentIDfromURLAsync(string strWebURL, string strFileURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMaxMinAvg", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CountMaxMinAvg(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMaxMinAvg", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> CountMaxMinAvgAsync(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMaxMinAvgUN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode CountMaxMinAvgUN(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMaxMinAvgUN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> CountMaxMinAvgUNAsync(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetItemPermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetItemPermission(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string userName, bool readOnly, bool canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetItemPermission", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetItemPermissionAsync(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string userName, bool readOnly, bool canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveItemPermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemoveItemPermission(string siteURL, string listName, int itemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveItemPermission", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RemoveItemPermissionAsync(string siteURL, string listName, int itemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetItemPermissionGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetItemPermissionGroup(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string groupName, bool readOnly, bool canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetItemPermissionGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetItemPermissionGroupAsync(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string groupName, bool readOnly, bool canEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveItemPermissionGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RemoveItemPermissionGroup(string siteURL, string listName, int itemID, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveItemPermissionGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RemoveItemPermissionGroupAsync(string siteURL, string listName, int itemID, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode QuerySQL(string ConnectionString, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> QuerySQLAsync(string ConnectionString, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItemsSS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItemsSS(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItemsSS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItemsSSAsync(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateListItemsSS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UpdateListItemsSS(string SiteURL, string listName, string updates, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateListItemsSS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateListItemsSSAsync(string SiteURL, string listName, string updates, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDocumentSS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateDocumentSS(string sFilename, string sContentType, string sList, string sURL, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDocumentSS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateDocumentSSAsync(string sFilename, string sContentType, string sList, string sURL, string AppID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode QuerySQL2(string p1, string From, string To);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> QuerySQL2Async(string p1, string From, string To);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GC(string TAI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GCAsync(string TAI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetListItems2(string SiteURL, string ListName, string Query, string Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetListItems2Async(string SiteURL, string ListName, string Query, string Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems2UN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetListItems2UN(string SiteURL, string ListName, string Query, string Fields, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItems2UN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItems2UNAsync(string SiteURL, string ListName, string Query, string Fields, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItemsJSON", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetListItemsJSON(string SiteURL, string ListName, string Query, string Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListItemsJSON", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetListItemsJSONAsync(string SiteURL, string ListName, string Query, string Fields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlElement QuerySQL3(string ConnectionString, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QuerySQL3", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> QuerySQL3Async(string ConnectionString, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserItemEditPermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode UserItemEditPermission(string SiteURL, string ListName, int ItemID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserItemEditPermission", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> UserItemEditPermissionAsync(string SiteURL, string ListName, int ItemID, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDisplayName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetDisplayName(string SiteURL, string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDisplayName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetDisplayNameAsync(string SiteURL, string UserName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EncodeURL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EncodeURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strURL;
        
        public EncodeURLRequest() {
        }
        
        public EncodeURLRequest(string strURL) {
            this.strURL = strURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EncodeURLResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EncodeURLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string EncodeURLResult;
        
        public EncodeURLResponse() {
        }
        
        public EncodeURLResponse(string EncodeURLResult) {
            this.EncodeURLResult = EncodeURLResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ahdaUtility15SoapChannel : RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ahdaUtility15SoapClient : System.ServiceModel.ClientBase<RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap>, RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap {
        
        public ahdaUtility15SoapClient() {
        }
        
        public ahdaUtility15SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ahdaUtility15SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ahdaUtility15SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ahdaUtility15SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAppID(string AppID) {
            return base.Channel.GetAppID(AppID);
        }
        
        public System.Threading.Tasks.Task<string> GetAppIDAsync(string AppID) {
            return base.Channel.GetAppIDAsync(AppID);
        }
        
        public string GetSiteListCount() {
            return base.Channel.GetSiteListCount();
        }
        
        public System.Threading.Tasks.Task<string> GetSiteListCountAsync() {
            return base.Channel.GetSiteListCountAsync();
        }
        
        public string GetCurrentUser2() {
            return base.Channel.GetCurrentUser2();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentUser2Async() {
            return base.Channel.GetCurrentUser2Async();
        }
        
        public string EnCodeURL(string strURL) {
            return base.Channel.EnCodeURL(strURL);
        }
        
        public System.Threading.Tasks.Task<string> EnCodeURLAsync(string strURL) {
            return base.Channel.EnCodeURLAsync(strURL);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap.EncodeURL1(RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest request) {
            return base.Channel.EncodeURL1(request);
        }
        
        public string EncodeURL1(string strURL) {
            RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest inValue = new RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest();
            inValue.strURL = strURL;
            RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse retVal = ((RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap)(this)).EncodeURL1(inValue);
            return retVal.EncodeURLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse> RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap.EncodeURL1Async(RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest request) {
            return base.Channel.EncodeURL1Async(request);
        }
        
        public System.Threading.Tasks.Task<RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLResponse> EncodeURL1Async(string strURL) {
            RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest inValue = new RaaiVan.Modules.Jobs.EsfahanProjects.EncodeURLRequest();
            inValue.strURL = strURL;
            return ((RaaiVan.Modules.Jobs.EsfahanProjects.ahdaUtility15Soap)(this)).EncodeURL1Async(inValue);
        }
        
        public System.Xml.XmlNode GetListItems(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string UserName, string Password, string Domain) {
            return base.Channel.GetListItems(SiteURL, listName, viewID, query, viewFields, rowLimit, queryOptions, webID, UserName, Password, Domain);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItemsAsync(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string UserName, string Password, string Domain) {
            return base.Channel.GetListItemsAsync(SiteURL, listName, viewID, query, viewFields, rowLimit, queryOptions, webID, UserName, Password, Domain);
        }
        
        public System.Xml.XmlNode UpdateListItems(string SiteURL, string listName, string updates, string UserName, string Password, string Domain) {
            return base.Channel.UpdateListItems(SiteURL, listName, updates, UserName, Password, Domain);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateListItemsAsync(string SiteURL, string listName, string updates, string UserName, string Password, string Domain) {
            return base.Channel.UpdateListItemsAsync(SiteURL, listName, updates, UserName, Password, Domain);
        }
        
        public string CreateInfoPathDoc(string sFilename, string sContentType, string sList, string sURL) {
            return base.Channel.CreateInfoPathDoc(sFilename, sContentType, sList, sURL);
        }
        
        public System.Threading.Tasks.Task<string> CreateInfoPathDocAsync(string sFilename, string sContentType, string sList, string sURL) {
            return base.Channel.CreateInfoPathDocAsync(sFilename, sContentType, sList, sURL);
        }
        
        public string CreateDocument(string sFilename, string sContentType, string sList, string sURL, string sUserName, string sPass) {
            return base.Channel.CreateDocument(sFilename, sContentType, sList, sURL, sUserName, sPass);
        }
        
        public System.Threading.Tasks.Task<string> CreateDocumentAsync(string sFilename, string sContentType, string sList, string sURL, string sUserName, string sPass) {
            return base.Channel.CreateDocumentAsync(sFilename, sContentType, sList, sURL, sUserName, sPass);
        }
        
        public long GetDocumentIDfromURL(string strWebURL, string strFileURL) {
            return base.Channel.GetDocumentIDfromURL(strWebURL, strFileURL);
        }
        
        public System.Threading.Tasks.Task<long> GetDocumentIDfromURLAsync(string strWebURL, string strFileURL) {
            return base.Channel.GetDocumentIDfromURLAsync(strWebURL, strFileURL);
        }
        
        public System.Xml.XmlNode CountMaxMinAvg(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol) {
            return base.Channel.CountMaxMinAvg(SiteURL, ListName, IsLibrary, WhereQuery, ValCol);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> CountMaxMinAvgAsync(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol) {
            return base.Channel.CountMaxMinAvgAsync(SiteURL, ListName, IsLibrary, WhereQuery, ValCol);
        }
        
        public System.Xml.XmlNode CountMaxMinAvgUN(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol, string UserName) {
            return base.Channel.CountMaxMinAvgUN(SiteURL, ListName, IsLibrary, WhereQuery, ValCol, UserName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> CountMaxMinAvgUNAsync(string SiteURL, string ListName, bool IsLibrary, string WhereQuery, string ValCol, string UserName) {
            return base.Channel.CountMaxMinAvgUNAsync(SiteURL, ListName, IsLibrary, WhereQuery, ValCol, UserName);
        }
        
        public string SetItemPermission(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string userName, bool readOnly, bool canEdit) {
            return base.Channel.SetItemPermission(siteURL, listName, itemID, stopInherit, removePrevPerm, userName, readOnly, canEdit);
        }
        
        public System.Threading.Tasks.Task<string> SetItemPermissionAsync(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string userName, bool readOnly, bool canEdit) {
            return base.Channel.SetItemPermissionAsync(siteURL, listName, itemID, stopInherit, removePrevPerm, userName, readOnly, canEdit);
        }
        
        public string RemoveItemPermission(string siteURL, string listName, int itemID, string userName) {
            return base.Channel.RemoveItemPermission(siteURL, listName, itemID, userName);
        }
        
        public System.Threading.Tasks.Task<string> RemoveItemPermissionAsync(string siteURL, string listName, int itemID, string userName) {
            return base.Channel.RemoveItemPermissionAsync(siteURL, listName, itemID, userName);
        }
        
        public string SetItemPermissionGroup(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string groupName, bool readOnly, bool canEdit) {
            return base.Channel.SetItemPermissionGroup(siteURL, listName, itemID, stopInherit, removePrevPerm, groupName, readOnly, canEdit);
        }
        
        public System.Threading.Tasks.Task<string> SetItemPermissionGroupAsync(string siteURL, string listName, int itemID, bool stopInherit, bool removePrevPerm, string groupName, bool readOnly, bool canEdit) {
            return base.Channel.SetItemPermissionGroupAsync(siteURL, listName, itemID, stopInherit, removePrevPerm, groupName, readOnly, canEdit);
        }
        
        public string RemoveItemPermissionGroup(string siteURL, string listName, int itemID, string groupName) {
            return base.Channel.RemoveItemPermissionGroup(siteURL, listName, itemID, groupName);
        }
        
        public System.Threading.Tasks.Task<string> RemoveItemPermissionGroupAsync(string siteURL, string listName, int itemID, string groupName) {
            return base.Channel.RemoveItemPermissionGroupAsync(siteURL, listName, itemID, groupName);
        }
        
        public System.Xml.XmlNode QuerySQL(string ConnectionString, string Query) {
            return base.Channel.QuerySQL(ConnectionString, Query);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> QuerySQLAsync(string ConnectionString, string Query) {
            return base.Channel.QuerySQLAsync(ConnectionString, Query);
        }
        
        public System.Xml.XmlNode GetListItemsSS(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string AppID) {
            return base.Channel.GetListItemsSS(SiteURL, listName, viewID, query, viewFields, rowLimit, queryOptions, webID, AppID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItemsSSAsync(string SiteURL, string listName, string viewID, string query, string viewFields, string rowLimit, string queryOptions, string webID, string AppID) {
            return base.Channel.GetListItemsSSAsync(SiteURL, listName, viewID, query, viewFields, rowLimit, queryOptions, webID, AppID);
        }
        
        public System.Xml.XmlNode UpdateListItemsSS(string SiteURL, string listName, string updates, string AppID) {
            return base.Channel.UpdateListItemsSS(SiteURL, listName, updates, AppID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> UpdateListItemsSSAsync(string SiteURL, string listName, string updates, string AppID) {
            return base.Channel.UpdateListItemsSSAsync(SiteURL, listName, updates, AppID);
        }
        
        public string CreateDocumentSS(string sFilename, string sContentType, string sList, string sURL, string AppID) {
            return base.Channel.CreateDocumentSS(sFilename, sContentType, sList, sURL, AppID);
        }
        
        public System.Threading.Tasks.Task<string> CreateDocumentSSAsync(string sFilename, string sContentType, string sList, string sURL, string AppID) {
            return base.Channel.CreateDocumentSSAsync(sFilename, sContentType, sList, sURL, AppID);
        }
        
        public System.Xml.XmlNode QuerySQL2(string p1, string From, string To) {
            return base.Channel.QuerySQL2(p1, From, To);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> QuerySQL2Async(string p1, string From, string To) {
            return base.Channel.QuerySQL2Async(p1, From, To);
        }
        
        public string GC(string TAI) {
            return base.Channel.GC(TAI);
        }
        
        public System.Threading.Tasks.Task<string> GCAsync(string TAI) {
            return base.Channel.GCAsync(TAI);
        }
        
        public System.Data.DataTable GetListItems2(string SiteURL, string ListName, string Query, string Fields) {
            return base.Channel.GetListItems2(SiteURL, ListName, Query, Fields);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetListItems2Async(string SiteURL, string ListName, string Query, string Fields) {
            return base.Channel.GetListItems2Async(SiteURL, ListName, Query, Fields);
        }
        
        public System.Xml.XmlNode GetListItems2UN(string SiteURL, string ListName, string Query, string Fields, string UserName) {
            return base.Channel.GetListItems2UN(SiteURL, ListName, Query, Fields, UserName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetListItems2UNAsync(string SiteURL, string ListName, string Query, string Fields, string UserName) {
            return base.Channel.GetListItems2UNAsync(SiteURL, ListName, Query, Fields, UserName);
        }
        
        public string GetListItemsJSON(string SiteURL, string ListName, string Query, string Fields) {
            return base.Channel.GetListItemsJSON(SiteURL, ListName, Query, Fields);
        }
        
        public System.Threading.Tasks.Task<string> GetListItemsJSONAsync(string SiteURL, string ListName, string Query, string Fields) {
            return base.Channel.GetListItemsJSONAsync(SiteURL, ListName, Query, Fields);
        }
        
        public System.Xml.XmlElement QuerySQL3(string ConnectionString, string Query) {
            return base.Channel.QuerySQL3(ConnectionString, Query);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> QuerySQL3Async(string ConnectionString, string Query) {
            return base.Channel.QuerySQL3Async(ConnectionString, Query);
        }
        
        public System.Xml.XmlNode UserItemEditPermission(string SiteURL, string ListName, int ItemID, string UserName) {
            return base.Channel.UserItemEditPermission(SiteURL, ListName, ItemID, UserName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> UserItemEditPermissionAsync(string SiteURL, string ListName, int ItemID, string UserName) {
            return base.Channel.UserItemEditPermissionAsync(SiteURL, ListName, ItemID, UserName);
        }
        
        public System.Xml.XmlNode GetDisplayName(string SiteURL, string UserName) {
            return base.Channel.GetDisplayName(SiteURL, UserName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetDisplayNameAsync(string SiteURL, string UserName) {
            return base.Channel.GetDisplayNameAsync(SiteURL, UserName);
        }
    }
}
