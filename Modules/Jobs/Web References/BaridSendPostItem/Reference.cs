//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Barid.WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CreatePostItemServiceSoap", Namespace="http://Baridsoft.ir/")]
    public partial class CreatePostItemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPostItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CreatePostItemService() {
            this.Url = global::RaaiVan.Modules.Jobs.Properties.Settings.Default.CreateLetterTest_CreateLetterWithLogService_AutomationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogOutCompletedEventHandler LogOutCompleted;
        
        /// <remarks/>
        public event SendPostItemCompletedEventHandler SendPostItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/Login", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userName, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/LogOut", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogOut(string ticketId) {
            this.Invoke("LogOut", new object[] {
                        ticketId});
        }
        
        /// <remarks/>
        public void LogOutAsync(string ticketId) {
            this.LogOutAsync(ticketId, null);
        }
        
        /// <remarks/>
        public void LogOutAsync(string ticketId, object userState) {
            if ((this.LogOutOperationCompleted == null)) {
                this.LogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOutOperationCompleted);
            }
            this.InvokeAsync("LogOut", new object[] {
                        ticketId}, this.LogOutOperationCompleted, userState);
        }
        
        private void OnLogOutOperationCompleted(object arg) {
            if ((this.LogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/SendPostItem", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebSendPostItemType SendPostItem(string userName, string passWord, string subject, string description, string[] receiverNationalCode, WebAttachment[] webAttachmewntList, int importanceType, int sensitivityType) {
            object[] results = this.Invoke("SendPostItem", new object[] {
                        userName,
                        passWord,
                        subject,
                        description,
                        receiverNationalCode,
                        webAttachmewntList,
                        importanceType,
                        sensitivityType});
            return ((WebSendPostItemType)(results[0]));
        }
        
        /// <remarks/>
        public void SendPostItemAsync(string userName, string passWord, string subject, string description, string[] receiverNationalCode, WebAttachment[] webAttachmewntList, int importanceType, int sensitivityType) {
            this.SendPostItemAsync(userName, passWord, subject, description, receiverNationalCode, webAttachmewntList, importanceType, sensitivityType, null);
        }
        
        /// <remarks/>
        public void SendPostItemAsync(string userName, string passWord, string subject, string description, string[] receiverNationalCode, WebAttachment[] webAttachmewntList, int importanceType, int sensitivityType, object userState) {
            if ((this.SendPostItemOperationCompleted == null)) {
                this.SendPostItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPostItemOperationCompleted);
            }
            this.InvokeAsync("SendPostItem", new object[] {
                        userName,
                        passWord,
                        subject,
                        description,
                        receiverNationalCode,
                        webAttachmewntList,
                        importanceType,
                        sensitivityType}, this.SendPostItemOperationCompleted, userState);
        }
        
        private void OnSendPostItemOperationCompleted(object arg) {
            if ((this.SendPostItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPostItemCompleted(this, new SendPostItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public partial class WebAttachment {
        
        private string fileExtentionField;
        
        private string fileNameField;
        
        private decimal idField;
        
        private byte[] fileContentField;
        
        /// <remarks/>
        public string FileExtention {
            get {
                return this.fileExtentionField;
            }
            set {
                this.fileExtentionField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public enum WebSendPostItemType {
        
        /// <remarks/>
        SendSuccessful,
        
        /// <remarks/>
        SendFaild,
        
        /// <remarks/>
        UserNotFound,
        
        /// <remarks/>
        LoginFaild,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LogOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SendPostItemCompletedEventHandler(object sender, SendPostItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPostItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPostItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebSendPostItemType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebSendPostItemType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591