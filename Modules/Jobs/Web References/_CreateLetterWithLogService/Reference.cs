//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TestSendPostItem.CreateLetterWithLogService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CreatePostItemServiceSoap", Namespace="http://Baridsoft.ir/")]
    public partial class CreatePostItemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPostItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindPersonalNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindNationalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddinvolvedPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAttachmentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CreatePostItemService() {
            this.Url = global::TestSendPostItem.Properties.Settings.Default.CreateLetterTest_CreateLetterWithLogService_AutomationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogOutCompletedEventHandler LogOutCompleted;
        
        /// <remarks/>
        public event SendPostItemCompletedEventHandler SendPostItemCompleted;
        
        /// <remarks/>
        public event FindPersonalNoCompletedEventHandler FindPersonalNoCompleted;
        
        /// <remarks/>
        public event FindNationalCodeCompletedEventHandler FindNationalCodeCompleted;
        
        /// <remarks/>
        public event FindPersonCompletedEventHandler FindPersonCompleted;
        
        /// <remarks/>
        public event AddinvolvedPersonCompletedEventHandler AddinvolvedPersonCompleted;
        
        /// <remarks/>
        public event AddAttachmentCompletedEventHandler AddAttachmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/Login", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string userName, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        userName,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/LogOut", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogOut(string ticketId) {
            this.Invoke("LogOut", new object[] {
                        ticketId});
        }
        
        /// <remarks/>
        public void LogOutAsync(string ticketId) {
            this.LogOutAsync(ticketId, null);
        }
        
        /// <remarks/>
        public void LogOutAsync(string ticketId, object userState) {
            if ((this.LogOutOperationCompleted == null)) {
                this.LogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOutOperationCompleted);
            }
            this.InvokeAsync("LogOut", new object[] {
                        ticketId}, this.LogOutOperationCompleted, userState);
        }
        
        private void OnLogOutOperationCompleted(object arg) {
            if ((this.LogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/SendPostItem", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebSendPostItemType SendPostItem(string userName, string passWord, WebPostItem postItem) {
            object[] results = this.Invoke("SendPostItem", new object[] {
                        userName,
                        passWord,
                        postItem});
            return ((WebSendPostItemType)(results[0]));
        }
        
        /// <remarks/>
        public void SendPostItemAsync(string userName, string passWord, WebPostItem postItem) {
            this.SendPostItemAsync(userName, passWord, postItem, null);
        }
        
        /// <remarks/>
        public void SendPostItemAsync(string userName, string passWord, WebPostItem postItem, object userState) {
            if ((this.SendPostItemOperationCompleted == null)) {
                this.SendPostItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPostItemOperationCompleted);
            }
            this.InvokeAsync("SendPostItem", new object[] {
                        userName,
                        passWord,
                        postItem}, this.SendPostItemOperationCompleted, userState);
        }
        
        private void OnSendPostItemOperationCompleted(object arg) {
            if ((this.SendPostItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPostItemCompleted(this, new SendPostItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/FindPersonalNo", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebParticipant FindPersonalNo(string userName, string passWord, string personalNo) {
            object[] results = this.Invoke("FindPersonalNo", new object[] {
                        userName,
                        passWord,
                        personalNo});
            return ((WebParticipant)(results[0]));
        }
        
        /// <remarks/>
        public void FindPersonalNoAsync(string userName, string passWord, string personalNo) {
            this.FindPersonalNoAsync(userName, passWord, personalNo, null);
        }
        
        /// <remarks/>
        public void FindPersonalNoAsync(string userName, string passWord, string personalNo, object userState) {
            if ((this.FindPersonalNoOperationCompleted == null)) {
                this.FindPersonalNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindPersonalNoOperationCompleted);
            }
            this.InvokeAsync("FindPersonalNo", new object[] {
                        userName,
                        passWord,
                        personalNo}, this.FindPersonalNoOperationCompleted, userState);
        }
        
        private void OnFindPersonalNoOperationCompleted(object arg) {
            if ((this.FindPersonalNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindPersonalNoCompleted(this, new FindPersonalNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/FindNationalCode", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebParticipant FindNationalCode(string userName, string passWord, string nationalCode) {
            object[] results = this.Invoke("FindNationalCode", new object[] {
                        userName,
                        passWord,
                        nationalCode});
            return ((WebParticipant)(results[0]));
        }
        
        /// <remarks/>
        public void FindNationalCodeAsync(string userName, string passWord, string nationalCode) {
            this.FindNationalCodeAsync(userName, passWord, nationalCode, null);
        }
        
        /// <remarks/>
        public void FindNationalCodeAsync(string userName, string passWord, string nationalCode, object userState) {
            if ((this.FindNationalCodeOperationCompleted == null)) {
                this.FindNationalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindNationalCodeOperationCompleted);
            }
            this.InvokeAsync("FindNationalCode", new object[] {
                        userName,
                        passWord,
                        nationalCode}, this.FindNationalCodeOperationCompleted, userState);
        }
        
        private void OnFindNationalCodeOperationCompleted(object arg) {
            if ((this.FindNationalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindNationalCodeCompleted(this, new FindNationalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/FindPerson", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebParticipant[] FindPerson(string userName, string passWord, string personName) {
            object[] results = this.Invoke("FindPerson", new object[] {
                        userName,
                        passWord,
                        personName});
            return ((WebParticipant[])(results[0]));
        }
        
        /// <remarks/>
        public void FindPersonAsync(string userName, string passWord, string personName) {
            this.FindPersonAsync(userName, passWord, personName, null);
        }
        
        /// <remarks/>
        public void FindPersonAsync(string userName, string passWord, string personName, object userState) {
            if ((this.FindPersonOperationCompleted == null)) {
                this.FindPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindPersonOperationCompleted);
            }
            this.InvokeAsync("FindPerson", new object[] {
                        userName,
                        passWord,
                        personName}, this.FindPersonOperationCompleted, userState);
        }
        
        private void OnFindPersonOperationCompleted(object arg) {
            if ((this.FindPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindPersonCompleted(this, new FindPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/AddinvolvedPerson", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebInvolvedPerson[] AddinvolvedPerson(WebInvolvedPerson involvedPerson, WebInvolvedPerson[] involvedList) {
            object[] results = this.Invoke("AddinvolvedPerson", new object[] {
                        involvedPerson,
                        involvedList});
            return ((WebInvolvedPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void AddinvolvedPersonAsync(WebInvolvedPerson involvedPerson, WebInvolvedPerson[] involvedList) {
            this.AddinvolvedPersonAsync(involvedPerson, involvedList, null);
        }
        
        /// <remarks/>
        public void AddinvolvedPersonAsync(WebInvolvedPerson involvedPerson, WebInvolvedPerson[] involvedList, object userState) {
            if ((this.AddinvolvedPersonOperationCompleted == null)) {
                this.AddinvolvedPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddinvolvedPersonOperationCompleted);
            }
            this.InvokeAsync("AddinvolvedPerson", new object[] {
                        involvedPerson,
                        involvedList}, this.AddinvolvedPersonOperationCompleted, userState);
        }
        
        private void OnAddinvolvedPersonOperationCompleted(object arg) {
            if ((this.AddinvolvedPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddinvolvedPersonCompleted(this, new AddinvolvedPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Baridsoft.ir/AddAttachment", RequestNamespace="http://Baridsoft.ir/", ResponseNamespace="http://Baridsoft.ir/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebAttachment AddAttachment(WebAttachment attachment) {
            object[] results = this.Invoke("AddAttachment", new object[] {
                        attachment});
            return ((WebAttachment)(results[0]));
        }
        
        /// <remarks/>
        public void AddAttachmentAsync(WebAttachment attachment) {
            this.AddAttachmentAsync(attachment, null);
        }
        
        /// <remarks/>
        public void AddAttachmentAsync(WebAttachment attachment, object userState) {
            if ((this.AddAttachmentOperationCompleted == null)) {
                this.AddAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddAttachment", new object[] {
                        attachment}, this.AddAttachmentOperationCompleted, userState);
        }
        
        private void OnAddAttachmentOperationCompleted(object arg) {
            if ((this.AddAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachmentCompleted(this, new AddAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public partial class WebPostItem {
        
        private WebAttachment[] attachmentListField;
        
        private WebInvolvedPerson[] involvedPersonListField;
        
        private WebImportanceType importanceTypeField;
        
        private WebSensitivityType sensitivityTypeField;
        
        private string descriptionField;
        
        private string subjectField;
        
        private bool hasAttachmentField;
        
        /// <remarks/>
        public WebAttachment[] AttachmentList {
            get {
                return this.attachmentListField;
            }
            set {
                this.attachmentListField = value;
            }
        }
        
        /// <remarks/>
        public WebInvolvedPerson[] InvolvedPersonList {
            get {
                return this.involvedPersonListField;
            }
            set {
                this.involvedPersonListField = value;
            }
        }
        
        /// <remarks/>
        public WebImportanceType ImportanceType {
            get {
                return this.importanceTypeField;
            }
            set {
                this.importanceTypeField = value;
            }
        }
        
        /// <remarks/>
        public WebSensitivityType SensitivityType {
            get {
                return this.sensitivityTypeField;
            }
            set {
                this.sensitivityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAttachment {
            get {
                return this.hasAttachmentField;
            }
            set {
                this.hasAttachmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public partial class WebAttachment {
        
        private string fileExtentionField;
        
        private string fileNameField;
        
        private decimal idField;
        
        private byte[] fileContentField;
        
        /// <remarks/>
        public string FileExtention {
            get {
                return this.fileExtentionField;
            }
            set {
                this.fileExtentionField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileContent {
            get {
                return this.fileContentField;
            }
            set {
                this.fileContentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public partial class WebParticipant {
        
        private decimal idField;
        
        private string displayStringField;
        
        private string organizationUnitField;
        
        private string personNameField;
        
        private string positionField;
        
        private decimal personIdField;
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayString {
            get {
                return this.displayStringField;
            }
            set {
                this.displayStringField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationUnit {
            get {
                return this.organizationUnitField;
            }
            set {
                this.organizationUnitField = value;
            }
        }
        
        /// <remarks/>
        public string PersonName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public decimal PersonId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public partial class WebInvolvedPerson {
        
        private decimal organizationIdField;
        
        private string displayStringField;
        
        private string personNameField;
        
        private decimal personIdField;
        
        private string organizationUnitNameField;
        
        private string positionNameField;
        
        private decimal idField;
        
        private string descriptionField;
        
        private decimal involvedParticipantIdField;
        
        private WebInvolvedType involvedTypeField;
        
        /// <remarks/>
        public decimal OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayString {
            get {
                return this.displayStringField;
            }
            set {
                this.displayStringField = value;
            }
        }
        
        /// <remarks/>
        public string PersonName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal PersonId {
            get {
                return this.personIdField;
            }
            set {
                this.personIdField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationUnitName {
            get {
                return this.organizationUnitNameField;
            }
            set {
                this.organizationUnitNameField = value;
            }
        }
        
        /// <remarks/>
        public string PositionName {
            get {
                return this.positionNameField;
            }
            set {
                this.positionNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal InvolvedParticipantId {
            get {
                return this.involvedParticipantIdField;
            }
            set {
                this.involvedParticipantIdField = value;
            }
        }
        
        /// <remarks/>
        public WebInvolvedType InvolvedType {
            get {
                return this.involvedTypeField;
            }
            set {
                this.involvedTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public enum WebInvolvedType {
        
        /// <remarks/>
        MainReceiver,
        
        /// <remarks/>
        CopyReceiver,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public enum WebImportanceType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Immediate,
        
        /// <remarks/>
        TopImmediate,
        
        /// <remarks/>
        Instantaneous,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public enum WebSensitivityType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Confidetial,
        
        /// <remarks/>
        TopConfidetial,
        
        /// <remarks/>
        Secret,
        
        /// <remarks/>
        TopSecret,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Baridsoft.ir/")]
    public enum WebSendPostItemType {
        
        /// <remarks/>
        SendSuccessful,
        
        /// <remarks/>
        SendFaild,
        
        /// <remarks/>
        LoginFaild,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void LogOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void SendPostItemCompletedEventHandler(object sender, SendPostItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPostItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPostItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebSendPostItemType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebSendPostItemType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void FindPersonalNoCompletedEventHandler(object sender, FindPersonalNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindPersonalNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindPersonalNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebParticipant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebParticipant)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void FindNationalCodeCompletedEventHandler(object sender, FindNationalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindNationalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindNationalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebParticipant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebParticipant)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void FindPersonCompletedEventHandler(object sender, FindPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebParticipant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebParticipant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AddinvolvedPersonCompletedEventHandler(object sender, AddinvolvedPersonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddinvolvedPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddinvolvedPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebInvolvedPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebInvolvedPerson[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AddAttachmentCompletedEventHandler(object sender, AddAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebAttachment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebAttachment)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591